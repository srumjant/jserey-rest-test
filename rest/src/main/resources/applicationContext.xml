<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-3.0.xsd
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
	http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.0.xsd">

	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:jdbc.properties</value>
				<value>classpath:hibernate.properties</value>
			</list>
		</property>
	</bean>
  	
	<context:component-scan base-package="ee.ttu.core.rest" />
	
	<!-- Services -->
	<bean id="contractService" class="ee.ttu.core.rest.service.impl.ContractService" parent="baseEntityService">
		<qualifier value="contractService" />
		<property name="dao" ref="contractDao" />
	</bean>
	<bean id="customerService" class="ee.ttu.core.rest.service.impl.CustomerService" parent="baseEntityService">
		<qualifier value="customerService" />
		<property name="dao" ref="customerDao" />
	</bean>
	<bean id="customerAddressService" class="ee.ttu.core.rest.service.impl.CustomerAddressService" parent="baseEntityService">
		<qualifier value="customerAddressService" />
		<property name="dao" ref="customerAddressDao" />
	</bean>
	<bean id="errorService" class="ee.ttu.core.rest.service.impl.ErrorService" />

	<bean id="baseEntityService" class="ee.ttu.core.rest.service.impl.BaseEntityService" abstract="true" />

	<!-- DAOs -->
	<bean id="contractDao" class="ee.ttu.core.rest.dao.impl.ContractDao" parent="genericDao">
		<qualifier value="contractDao" />
	</bean>
	<bean id="customerDao" class="ee.ttu.core.rest.dao.impl.CustomerDao" parent="genericDao">
		<qualifier value="customerDao" />
	</bean>
	<bean id="customerAddressDao" class="ee.ttu.core.rest.dao.impl.CustomerAddressDao" parent="genericDao">
		<qualifier value="customerAddressDao" />
	</bean>
	
	<bean id="genericDao" class="ee.ttu.core.rest.dao.impl.GenericDao" abstract="true" />

	<!-- ========================= DB CONFIGURATION ========================= -->

	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="configLocation">
			<value>classpath:hibernate.cfg.xml</value>
		</property>
	</bean>

	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close">
		<property name="driverClass" value="${jdbc.connection.driver_class}" />
		<property name="jdbcUrl" value="${jdbc.connection.url}" />
		<property name="user" value="${jdbc.connection.username}" />
		<property name="password" value="${jdbc.connection.password}" />

		<property name="acquireIncrement" value="${jdbc.c3p0.acquireIncrement}" />
		<property name="initialPoolSize" value="${jdbc.c3p0.initialPoolSize}" />
		<property name="minPoolSize" value="${jdbc.c3p0.minPoolSize}" />
		<property name="maxPoolSize" value="${jdbc.c3p0.maxPoolSize}" />
		<property name="maxIdleTime" value="${jdbc.c3p0.maxIdleTime}" />
		<property name="maxStatements" value="${jdbc.c3p0.maxStatements}" />
		<property name="numHelperThreads" value="${jdbc.c3p0.numHelperThreads}" />
	</bean>

	<!-- Transaction -->

	<tx:annotation-driven transaction-manager="transactionManager" />
	
	<!-- enable the configuration of transactional behavior based on annotations -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

</beans>